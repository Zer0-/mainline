- Trying 10,000 nodes on one port resulted in running out of memory (less than 8Gb were available)
- About 330,000 nodes were added to the routing tables, my very rough estimate is that nodes add between
  100 and 200 peers to their RT, so optimistically it's possible we were a third of the way there
- This is before any kind of timed cleanup is implemented






Plan
====

Maybe
-----

Move Mainline to Network.Mainline?
Mainline/Scripts/SendUDPHello.hs to a common Runnables directory with App?
Then we have Network.{Mainline, KRPC, Bittorrent}
- but we still have all of the actual network calls under Architecture


Priority
--------

  Mainline
    - Timed cleanup routines for Mainline
    - Initiate GetPeers

  Peer Protocol
    - would greatly benefit from concurrency

Misc
----
  - in a lib we depend on, BEncode instance for InfoDict encodes the dict it
  is given to get the info hash. This is wasteful since the dict itself was probably
  just decoded from a bytestring. Maybe the info hash need not be part of the
  data structure so we can just compute it from the original bytestring?
